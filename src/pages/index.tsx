import { type NextPage } from "next";
import { useSession } from "next-auth/react";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import ConvoList from "~/components/ConvoList";
import ConvoView from "~/components/ConvoView";
import LoadingPage from "~/components/LoadingPage";
import { type RouterOutputs, api } from "~/utils/api";
type Conversation =
  RouterOutputs["messages"]["getConversationsByUserId"][number];
const Home: NextPage = () => {
  const [currentConvo, setCurrentConvo] = useState<
    Conversation | undefined | null
  >(null);

  const { data: sessionData } = useSession();
  const { push } = useRouter();

  useEffect(() => {
    if (!sessionData?.user) {
      void (async () => await push("/login"))();
    }
  }, [push, sessionData]);

  const { data: conversations, isLoading: conversationsLoading } =
    api.messages.getConversationsByUserId.useQuery();

  return (
    <>
      <Head>
        <title>Charla Mundo</title>
        <meta name="description" content="Generated by create-t3-app" />
      </Head>
      <main className="h-screen max-h-screen w-[95%] max-w-[95%] bg-gradient-to-b from-blueGray to-plum text-white">
        {conversationsLoading || !conversations ? (
          <LoadingPage size={68} />
        ) : (
          <div className="flex">
            <ConvoList setCurrentConvo={setCurrentConvo} />
            {currentConvo && <ConvoView conversation={currentConvo} />}
          </div>
        )}
      </main>
    </>
  );
};

export default Home;
